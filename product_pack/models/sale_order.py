# -*- encoding: utf-8 -*-

from odoo import models, api


class sale_order(models.Model):
    _inherit = 'sale.order'

    def copy(self, default=None):
        sale_copy = super(sale_order, self).copy(default)
        # get copied lines
        pack_copied_lines = sale_copy.order_line.filtered(
                lambda l: l.pack_parent_line_id.order_id == self)
        # get new lines
        new_lines = sale_copy.order_line.filtered(
                lambda l: l.pack_parent_line_id and l.pack_parent_line_id.order_id != self)
        # delete new lines generated by package expand function
        new_lines.unlink()
        # update copied lines data
        for line in pack_copied_lines:
            # link each line to the new parent that have same product_id and line sequence of the old parent
            parent_line = sale_copy.order_line.filtered(lambda l:
            l.product_id == line.pack_parent_line_id.product_id and
            l.sequence == line.pack_parent_line_id.sequence)
            line.pack_parent_line_id = parent_line and parent_line[0] or False

        # recalculate remaining totalice_price pack lines
        for line in sale_copy.order_line.filtered(lambda l: l.pack_depth == 0 and
        l.product_id.pack_price_type == 'totalice_price'):
            # print '>>>> up pack total line: ', line.id, line.product_id.name
            line.update_pack_line_total()
        # for the dvit_sale_line_duplicate - recalculate the duplicate status of all lines
        if hasattr(self.env['sale.order.line'],'duplicate'):
            sale_copy._check_duplicate()

        return sale_copy

    def write(self, vals):
        old_lines = self.order_line
        res = super(sale_order, self).write(vals)
        if old_lines:
            for order in self:
                ### we will recalculate all lines that have childs and totalice_price and depth is 0
                for line in order.order_line.filtered(lambda l: l.pack_child_line_ids and
                l.product_id.pack_price_type == 'totalice_price' and not l.pack_parent_line_id):
                    line.update_pack_line_total()
        return res

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
